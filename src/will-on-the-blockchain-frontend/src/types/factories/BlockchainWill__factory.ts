/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlockchainWill,
  BlockchainWillInterface,
} from "../BlockchainWill";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "citizenshipCardId",
        type: "string",
      },
    ],
    name: "HasCreatedWill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "citizenshipCardId",
        type: "string",
      },
    ],
    name: "HasNotCreatedWill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotTestator",
    type: "error",
  },
  {
    inputs: [],
    name: "PrivateWill",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicWill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "citizenshipCardId",
        type: "string",
      },
    ],
    name: "UnderAge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "citizenshipCardIdToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "citizenshipCardIdToWill",
    outputs: [
      {
        internalType: "string",
        name: "will",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "secretCode",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "testator",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "firstWitness",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "secondWitness",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "will",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isPublic",
            type: "bool",
          },
          {
            internalType: "string",
            name: "secretCode",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "testator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "firstWitness",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "secondWitness",
            type: "tuple",
          },
        ],
        internalType: "struct BlockchainWill.WillCreation",
        name: "_will",
        type: "tuple",
      },
    ],
    name: "createWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPublicWills",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "will",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isPublic",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "secretCode",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "testator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "firstWitness",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "secondWitness",
            type: "tuple",
          },
        ],
        internalType: "struct BlockchainWill.Will[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPublicWillsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testatorCitizenshipCardId",
        type: "string",
      },
    ],
    name: "getWill",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "will",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isPublic",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "secretCode",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "testator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "firstWitness",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "citizenshipCardId",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "birthdate",
                type: "uint256",
              },
            ],
            internalType: "struct BlockchainWill.Person",
            name: "secondWitness",
            type: "tuple",
          },
        ],
        internalType: "struct BlockchainWill.Will",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "personHasCreatedWill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publicWills",
    outputs: [
      {
        internalType: "string",
        name: "will",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "secretCode",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "testator",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "firstWitness",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "citizenshipCardId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "birthdate",
            type: "uint256",
          },
        ],
        internalType: "struct BlockchainWill.Person",
        name: "secondWitness",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testatorCitizenshipCardId",
        type: "string",
      },
    ],
    name: "revokePrivateWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testatorCitizenshipCardId",
        type: "string",
      },
    ],
    name: "revokePublicWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type BlockchainWillConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockchainWillConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockchainWill__factory extends ContractFactory {
  constructor(...args: BlockchainWillConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockchainWill & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockchainWill__factory {
    return super.connect(runner) as BlockchainWill__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockchainWillInterface {
    return new Interface(_abi) as BlockchainWillInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockchainWill {
    return new Contract(address, _abi, runner) as unknown as BlockchainWill;
  }
}
